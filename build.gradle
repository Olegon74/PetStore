plugins {
    id 'java'
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id("io.freefair.lombok") version "8.6"
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()

}

def allureVersion = "2.20.1"
//slf4jVersion = "2.0.9"

allure {
    report {
        version.set(allureVersion)
    }
    adapter { //отвечает за создание папки builde/allure-results
        aspectjWeaver.set(true)
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


dependencies {
    testImplementation(

            'com.codeborne:selenide:7.0.4',
            'org.junit.jupiter:junit-jupiter:5.10.2',
            'org.junit.jupiter:junit-jupiter-engine:5.10.2',
            'io.qameta.allure:allure-junit5:2.23.0',
            'io.qameta.allure:allure-selenide:2.20.1',
            'io.qameta.allure:allure-java-commons:2.20.1',
            'org.aspectj:aspectjweaver:1.9.21',
            'io.github.bonigarcia:webdrivermanager:5.7.0',
            'org.slf4j:slf4j-simple:2.0.9',
            'org.assertj:assertj-core:3.24.2',
            'io.rest-assured:rest-assured:5.4.0',
            'io.qameta.allure:allure-rest-assured:2.23.0',
            'org.projectlombok:lombok:1.18.30',
            'com.fasterxml.jackson.core:jackson-databind:2.14.2'

    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
}
